#parse("formUtils.vm")
<template>
    <el-dialog
        v-model="dialogVisible"
        :title="dialogTitle"
        width="60vw"
        :close-on-click-modal="false"
        :before-close="closeFormModal">
        <el-form
            ref="refForm"
            label-width="150px"
            :inline="false"
            :model="subForm"
            :rules="formRules"
            class="pr-5">
            #formTemp()
        </el-form>
        <template #footer>
            <span class="dialog-footer">
                <el-button @click="closeFormModal">取 消</el-button>
                <el-button type="primary" @click="confirmBtnClick">确 定</el-button>
            </span>
        </template>
    </el-dialog>
</template>

<script setup="setup">
    const emit = defineEmits(['selectPageReq', 'hideComp'])
    const {formRules, elMessage} = useElement()
    /*2.modal新增和修改*/
    //新增
    let subForm = reactive({#fromDataProp()})
    const refForm = $ref(null)
    let confirmBtnClick = () => {
        refForm.validate((valid) => {
                if (valid) {
                    if (subForm.id) {
                        updateReq()
                    } else {
                        insertReq()
                    }
                } else {
                    return false
                }
            })
    }
    #insertReq()
    //修改
    const reshowData = (row) => {
        Object.keys(row).forEach((fItem) => {
                Object.keys(subForm).forEach((sItem) => {
                        if (fItem === sItem) {
                            subForm[sItem] = row[sItem]
                        }
                    })
            })
    }
    #updateReq()

    /*3.弹框相关*/
    //显示弹框
    let dialogTitle=$ref(null)
    let dialogVisible=$ref(null)
    let chooseFileName=$ref(null)
    let showModal = (isEdit, detailData) => {
        if (isEdit) {
            dialogTitle = `编辑【${commonConfig.modalTitle}】`
            dialogVisible = true
            reshowData(detailData)
        } else {
            dialogTitle = '添加【${commonConfig.modalTitle}】'
            dialogVisible = true
        }
    }
    //关闭弹框
    let closeFormModal = () => {
        emit('hideComp')
    }
    #formScript()
    onMounted(() => {
        #onMountedScript()
    })
    //导出给refs使用
    defineExpose({showModal})
</script>

<style scoped="scoped" lang="scss"></style>