##生成查询表单数据
#macro(queryItem)
    #foreach($item in $queryConfig)
        #if($item.componentType=="input") ##input
        <el-form-item prop="${item.field}">
            <el-input
                    v-model="searchForm.${item.field}"
                    style="width:${item.width}px"
                    placeholder="${item.desc}"/>
        </el-form-item>
        #elseif($item.componentType=="select") ##select
        <el-form-item prop="${item.field}">
            <el-select
                    v-model="searchForm.${item.field}"
                    clearable="clearable"
                    placeholder="${item.desc}"
                    style="width:${item.width}px">
                #foreach($enum in $item.optionDataArr)
                    <el-option label="${enum.label}" value="${enum.value}"/>
                #end
            </el-select>
        </el-form-item>
        #elseif($item.componentType=="selectApi") ##selectApi
        <el-form-item prop="${item.field}">
            <el-select
                    v-model="searchForm.${item.fieldCase}"
                    clearable="clearable"
                    placeholder="${item.desc}"
                    style="width:${item.width}px">
                <el-option
                        v-for="item in ${item.field}Data"
                        :key="item.${item.valueKey}"
                        :label="item.${item.labelKey}"
                        :value="item.${item.valueKey}"/>
            </el-select>
        </el-form-item>
        #elseif($item.componentType=="cascaderApi") ##cascaderApi
        <el-form-item label="${item.desc}">
            <el-cascader
                    :options="cascade${item.fieldCase}"
                    clearable="clearable"
                    filterable="filterable"
                    placeholder="${item.desc}"
                    :show-all-levels="false"
                    style="width:${item.width}px"/>
        </el-form-item>
        #elseif($item.componentType=="datetimerange") ##datetimerange
        <el-form-item prop="${item.field}">
            <el-date-picker
                    v-model="selectStartEndArr"
                    type="datetimerange"
                    format="YYYY-MM-DD HH:mm:ss"
                    value-format="YYYY-MM-DD HH:mm:ss"
                    @change="selectTimePack"
                    style="width:${item.width}px"
                    range-separator="-"
                    start-placeholder="开始日期"
                    end-placeholder="结束日期"/>
        </el-form-item>
        #elseif($item.componentType=="datetime") ##datetime
        <el-form-item prop="${item.field}">
            <el-date-picker
                    v-model="searchForm.${item.field}"
                    type="datetime"
                    format="YYYY-MM-DD HH:mm:ss"
                    placeholder="${item.desc}"
                    value-format="YYYY-MM-DD HH:mm:ss"
                    style="width:${item.width}px"/>
        </el-form-item>
        #elseif($item.componentType=="date") ##date
        <el-form-item prop="${item.field}">
            <el-date-picker v-model="datePacking" type="date"  placeholder="${item.desc}" style="width:${item.width}px"/>
        </el-form-item>
        #end
    #end
#end
##生成queryScript
#macro(queryScript)
    #foreach($item in $queryConfig)
        #if($item.componentType=="selectApi")##selectApi
        let ${item.field}Data = $ref([])
        const ${item.field}Req = () => {
        let reqConfig = {
            url: '${item.api}',
            method: '${item.method}',
        }
        axiosReq(reqConfig).then(({records}) => {
            ${item.field}Data = records
        })}
        #end
    #end
#end
##onMouted需要调用的请求
#macro(onMountedScript)
onMounted(()=>{
selectPageReq()
    #foreach($item in $queryConfig)
        #if($item.componentType=="selectApi")##selectApi
        ${item.field}Req()
        #end
    #end
})
#end